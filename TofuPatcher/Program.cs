using System.Collections.Frozen;
using Mutagen.Bethesda;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;

namespace TofuPatcher
{
    public class Program
    {
        static Lazy<TofuPatcherSettings> Settings = null!;

        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline
                .Instance.AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings(
                    nickname: "TofuPatcherSettings",
                    path: "TofuPatcherSettings.json",
                    out Settings
                )
                .SetTypicalOpen(GameRelease.SkyrimSE, "TofuPatcher.esp")
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            var excludeMods = Settings.Value.ExcludeMods.ToFrozenSet();
            var excludeRecords = Settings
                .Value.ExcludeRecords.Select(record => record.FormKey)
                .ToFrozenSet();

            var pipeline = new DialoguePatcherPipeline(
                state.PatchMod,
                context => !excludeMods.Contains(context.ModKey),
                context => !excludeRecords.Contains(context.Record.FormKey)
            );

            var dialogueTopics = state
                .LoadOrder.PriorityOrder.DialogTopic()
                .WinningContextOverrides();
            pipeline.PatchRecords(DialogueTopicPatcher.Instance, dialogueTopics);

            var dialogueInfos = state
                .LoadOrder.PriorityOrder.DialogResponses()
                .WinningContextOverrides(state.LinkCache);
            pipeline.PatchRecords(DialogueInfoPatcher.Instance, dialogueInfos);

            Console.WriteLine($"Patched {pipeline.PatchedCount} total records");
        }
    }
}
